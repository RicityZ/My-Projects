<?php
header("Content-Type: application/json");

$data = json_decode(file_get_contents("php://input"), true);
$spec1 = $data["spec1"] ?? null;
$spec2 = $data["spec2"] ?? null;

if (!$spec1 || !$spec2) {
    echo json_encode(["status" => "error", "message" => "Missing spec data"]);
    exit;
}

$apiKey = "AIzaSyBrT-hycuVyoRpWU-TL0979bXtzAGHeDTk"; // üîë ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

$prompt = "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏î‡πâ‡∏≤‡∏ô‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ CPU, GPU, RAM, SSD, HDD, PSU, CASE, MAINBOARD, COOLER ‡πÉ‡∏´‡πâ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏ó‡∏µ‡πà‡∏°‡∏µ winner ‡∏Å‡∏±‡∏ö reason ‡πÄ‡∏ä‡πà‡∏ô
{
  \"CPU\": { \"winner\": \"‡∏ù‡∏±‡πà‡∏á1\", \"reason\": \"‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤\" },
  ...
}

‡∏ù‡∏±‡πà‡∏á1: " . json_encode($spec1, JSON_UNESCAPED_UNICODE) . "
‡∏ù‡∏±‡πà‡∏á2: " . json_encode($spec2, JSON_UNESCAPED_UNICODE);

$body = json_encode([
  "contents" => [[ "parts" => [[ "text" => $prompt ]] ]],
  "generationConfig" => [
    "temperature" => 0.7,
    "maxOutputTokens" => 1024
  ]
]);

// ‚úÖ ‡πÉ‡∏ä‡πâ cURL ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ‡πÅ‡∏ö‡∏ö <html>
$ch = curl_init("https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyBrT-hycuVyoRpWU-TL0979bXtzAGHeDTk");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, $body);

$response = curl_exec($ch);
$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

// ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ HTTP ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö 200 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ($httpCode !== 200) {
    echo json_encode([
        "status" => "error",
        "message" => "Gemini API error",
        "http_code" => $httpCode,
        "raw" => $response
    ]);
    exit;
}

// ‚úÖ ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ JSON ‡∏ï‡∏£‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
$result = json_decode($response, true);
$text = $result["candidates"][0]["content"]["parts"][0]["text"] ?? "";

// ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å debug (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ö‡∏ô server)
file_put_contents("debug_gemini.txt", $text);

// ‚úÖ ‡∏î‡∏∂‡∏á JSON ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
$jsonStart = strpos($text, "{");
if ($jsonStart === false) {
    echo json_encode(["status" => "error", "message" => "No JSON found", "raw" => $text]);
    exit;
}

$json = substr($text, $jsonStart);
$decoded = json_decode($json, true);

if (!$decoded) {
    echo json_encode(["status" => "error", "message" => "‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "raw" => $text]);
    exit;
}

echo json_encode(["status" => "success", "result" => $decoded]);
